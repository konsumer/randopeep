{"version":3,"sources":["webpack://randopeep/webpack/universalModuleDefinition","webpack://randopeep/webpack/bootstrap","webpack://randopeep/./src/index.js","webpack://randopeep/./src/name.js","webpack://randopeep/./src/cc.js","webpack://randopeep/./src/job.js","webpack://randopeep/./src/ipsum.js","webpack://randopeep/./src/address.js","webpack://randopeep/./src/corporate.js","webpack://randopeep/./src/internet.js","webpack://randopeep/./src/invention.js","webpack://randopeep/./src/clickbait.js"],"names":["root","factory","exports","module","define","amd","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","format","_len","arguments","length","args","Array","_key","shift","replace","match","number","data","titleCase","str","txt","charAt","toUpperCase","substr","toLowerCase","require","int","max","Math","floor","random","randomEl","arr","replaceSymbolWithNumber","string","symbol","undefined","RegExp","_len2","_key2","filter","a","map","join","getCount","list","fill","iface","cc","job","ipsum","address","corporate","internet","invention","clickbait","_index","defaults","origin","gender","last","justLast","prefix","suffix","returnData","params","assign","keys","forEach","isArray","e","luhnGen","parseInt","substring","issuer","len","out","toString","split","push","sentenceLengths","word","zip","geo","toFixed","state","uk","county","country","phone","city","sOrigins","_name2","default","streetName","secondaryAddress","streetAddress","useFullAddress","frm","catchPhrase","bs","ip","username","derived","domain","email","formats","star1","star2","star3","star4","headline","star","withInfo","noun","verb","modifier"],"mappings":"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","file":"randopeep.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"randopeep\"] = factory();\n\telse\n\t\troot[\"randopeep\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import name from './name'\nimport cc from './cc'\nimport job from './job'\nimport ipsum from './ipsum'\nimport address from './address'\nimport corporate from './corporate'\nimport internet from './internet'\nimport invention from './invention'\nimport clickbait from './clickbait'\n\nexport const format = (...args) => args.shift().replace(/{(\\d+)}/g, (match, number) => (\n  typeof args[number] !== 'undefined'\n    ? args[number]\n    : match\n))\n\nexport const titleCase = str => str.replace(/\\w\\S*/g, txt => txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase())\nexport const data = require('./data.json')\nexport const int = max => Math.floor(Math.random() * (max || 10))\nexport const randomEl = arr => arr[int(arr.length)]\nexport const replaceSymbolWithNumber = (string, symbol = '#') => string.replace(new RegExp(symbol, 'g'), (match, number) => int(10))\n\nexport const get = (...args) => args\n  .filter(a => typeof data[a] !== 'undefined')\n  .map(a => randomEl(data[a]))\n  .join(' ')\n\nexport const getCount = (n, list) => (new Array(n)).fill('').map(() => get(list))\n\nconst iface = {\n  data,\n  int,\n  randomEl,\n  get,\n  getCount,\n  format,\n  replaceSymbolWithNumber,\n  name,\n  cc,\n  job,\n  ipsum,\n  address,\n  corporate,\n  internet,\n  invention,\n  clickbait\n}\n\nexport default iface\nmodule.exports = iface\n","import { randomEl, get } from './index'\n\nconst defaults = {\n  'origin': ['chinese', 'elven', 'elven/dark', 'dwarven', 'english', 'germanic', 'japanese', 'orcish', 'spanish', 'netrunner'],\n  'gender': ['male', 'female'],\n  'last': true,\n  'justLast': false,\n  'prefix': [true, false],\n  'suffix': [true, false],\n  'returnData': false\n}\n\nconst name = (params = {}, n = 1) => {\n  if (n !== 1) return (new Array(n)).fill('').map(() => name(params))\n  params = Object.assign({}, defaults, params)\n\n  Object.keys(defaults).forEach(i => {\n    if (Array.isArray(params[i])) {\n      params[i] = randomEl(params[i])\n    }\n  })\n\n  // some don't have gender\n  // some don't have titles\n  // some don't have prefixes\n  switch (params.origin) {\n    case 'elven/dark':\n      params.last = false\n      params.gender = false\n      params.prefix = false\n      params.suffix = false\n      params.name = get('name/elven/dark')\n      break\n    case 'dwarven':\n      params.last = false\n      params.gender = false\n      params.prefix = false\n      params.suffix = false\n      params.name = get('name/dwarven')\n      break\n    case 'orcish':\n      params.last = false\n      params.gender = false\n      params.prefix = false\n      params.suffix = false\n      params.name = get('name/orcish')\n      break\n    case 'netrunner':\n      params.name = ''\n      if (params.last) {\n        if (randomEl([true, false])) {\n          params.origin = randomEl(['chinese', 'english', 'germanic', 'japanese', 'spanish'])\n          params.name = get(`name/${params.origin}/${params.gender}`)\n        } else {\n          params.name = get('name/netrunner')\n        }\n        params.name += ' '\n      }\n      params.suffix = false\n      params.name += get('name/netrunner')\n      break\n    case 'elven':\n      params.prefix = false\n      params.suffix = false\n      params.name = [params.gender, 'last'].map(e => get(`name/elven/${e}`)).join(' ')\n      break\n    default:\n      if (!params.gender) {\n        params.gender = randomEl(['male', 'female'])\n      }\n      if (params.last && !params.justLast) {\n        params.name = [params.gender, 'last'].map(e => get(`name/${params.origin}/${e}`)).join(' ')\n      } else if (!params.last) {\n        params.name = get(`name/${params.origin}/${params.gender}`)\n      } else {\n        params.name = get(`name/${params.origin}/last`)\n      }\n  }\n\n  if (params.prefix) {\n    if (!params.gender) {\n      params.gender = randomEl(['male', 'female'])\n    }\n    params.prefix = get(`name/prefix/${params.gender}`)\n    params.name = `${params.prefix} ${params.name}`\n  }\n\n  if (params.suffix) {\n    params.suffix = get(`name/suffix`)\n    params.name = `${params.name} ${params.suffix}`\n  }\n\n  return params.returnData ? params : params.name\n}\n\nexport default name\n","import { randomEl, int } from './index'\n\nconst luhnGen = ((() => {\n  const d = [0, 1, 2, 3, 4, -4, -3, -2, -1, 0]\n  return (l, s, i, m) => {\n    s = 0\n    for (i = 0; i < l.length; i++) { s += parseInt(l.substring(i, i + 1), 10) }\n    for (i = l.length - 1; i >= 0; i -= 2) { s += d[parseInt(l.substring(i, i + 1), 10)] }\n    m = 10 - (s % 10)\n    return (m === 10) ? 0 : m\n  }\n}))()\n\nconst cc = (issuer = 'visa', len = 16, n = 1) => {\n  if (n !== 1) {\n    return (new Array(n)).fill('').map(() => cc(issuer, len))\n  }\n  let out\n\n  if (issuer !== 'visa') {\n    len = 16\n  }\n\n  switch (issuer) {\n    case 'visa':\n      if (len !== 16 && len !== 13) {\n        len = 16\n      }\n      out = 4\n      break\n    case 'mastercard':\n      out = randomEl([51, 52, 53, 54, 55])\n      break\n    case 'amex':\n      out = randomEl([34, 37])\n      break\n    case 'discover':\n      out = randomEl([6011, 622126 + int(799), 644 + int(5), 65])\n      break\n    case 'diners':\n      out = randomEl([54, 55])\n      break\n  }\n\n  out = out.toString().split('')\n  while (out.length < (len - 1)) {\n    out.push(int().toString())\n  }\n\n  out.push(luhnGen(out.join('')))\n  return out.join('')\n}\n\nexport default cc\n","import { get, getCount } from './index'\n\nexport default (n = 1) => (n === 1) ? get('jobs') : getCount(n, 'jobs')\n","import { getCount, titleCase } from './index'\n\nexport default (len = 200, list = 'lorem') => {\n  const out = []\n  const sentenceLengths = [10, 12, 13, 15, 14]\n  const words = getCount(len, list)\n\n  words.forEach(function (word, i) {\n    if (i === 0 || i % sentenceLengths[i % 5] === 0) {\n      word = titleCase(word)\n      if (i !== 0) {\n        out[i - 1] += '.'\n      }\n    }\n    out.push(word)\n  })\n  return out.join(' ') + '.'\n}\n","import { get, getCount, replaceSymbolWithNumber, randomEl, int, format, titleCase } from './index'\nimport name from './name'\n\nexport const zip = (n = 1) => {\n  if (n !== 1) { return (new Array(n)).fill('').map(() => zip()) }\n  return replaceSymbolWithNumber(randomEl(['#####', '#####-####']))\n}\n\nexport const geo = (n = 1) => {\n  if (n !== 1) { return (new Array(n)).fill('').map(() => geo()) }\n  return [(int(180 * 10000) / 10000.0 - 90.0).toFixed(4), (int(360 * 10000) / 10000.0 - 180.0).toFixed(4)]\n}\n\nexport const state = (n = 1) => (n === 1) ? get('address/us/state') : getCount(n, 'address/us/state')\nstate.a = (n = 1) => (n === 1) ? get('address/us/state_abbr') : getCount(n, 'address/us/state_abbr')\n\nexport const uk = {\n  county: (n = 1) => (n === 1) ? get('address/uk/county') : getCount(n, 'address/uk/county'),\n  country: (n = 1) => (n === 1) ? get('address/uk/country') : getCount(n, 'address/uk/country')\n}\n\nexport const phone = (n = 1) => {\n  if (n !== 1) { return (new Array(n)).fill('').map(() => phone()) }\n  return replaceSymbolWithNumber(get('address/phone'))\n}\n\nexport const city = (n = 1) => {\n  if (n !== 1) { return (new Array(n)).fill('').map(() => city()) }\n  const sOrigins = get('address/origins')\n  switch (int(6)) {\n    case 0:\n      return format(\n        '{0} {1}{2}',\n        get('address/city/prefix'),\n        name({ 'justLast': true, 'origin': sOrigins, 'prefix': false, suffix: false }),\n        get('address/city/suffix')\n      )\n    case 1:\n      return format(\n        '{0} {1}{2}',\n        get('address/city/prefix'),\n        name({ 'last': false, 'origin': sOrigins, 'prefix': false, suffix: false }),\n        get('address/city/suffix')\n      )\n    case 2:\n      return format(\n        '{0}{1}',\n        name({ 'justLast': true, 'origin': sOrigins, 'prefix': false, suffix: false }),\n        get('address/city/suffix')\n      )\n    case 3:\n      return format(\n        '{0}{1}',\n        name({ 'last': false, 'origin': sOrigins, 'prefix': false, suffix: false }),\n        get('address/city/suffix')\n      )\n    case 4:\n      return format(\n        '{0} {1}',\n        get('address/city/prefix'),\n        name({ 'justLast': true, 'origin': sOrigins, 'prefix': false, suffix: false })\n      )\n    case 5:\n      return format(\n        '{0} {1}',\n        get('address/city/prefix'),\n        name({ 'last': false, 'origin': sOrigins, 'prefix': false, suffix: false })\n      )\n  }\n}\n\nconst streetName = (n = 1) => {\n  if (n !== 1) { return (new Array(n)).fill('').map(() => city()) }\n  const sOrigins = get('address/origins')\n  switch (int(5)) {\n    case 0:\n    case 1:\n    case 2:\n    case 3:\n      return format(\n        '{0} {1}',\n        name({ 'justLast': true, 'origin': sOrigins, 'prefix': false, suffix: false }),\n        get('address/street')\n      )\n    case 4:\n      return format(\n        '{0} {1}',\n        titleCase(get('bs/noun')),\n        get('address/street')\n      )\n  }\n}\n\nconst streetAddress = (useFullAddress, n = 1) => {\n  if (n !== 1) { return (new Array(n)).fill('').map(() => streetAddress(useFullAddress)) }\n  if (useFullAddress === 'random') { useFullAddress = randomEl([true, false]) }\n  const out = (useFullAddress) ? ', ' + secondaryAddress() : ''\n  switch (int(3)) {\n    case 0:\n      return replaceSymbolWithNumber('#####') + ' ' + streetName() + out\n    case 1:\n      return replaceSymbolWithNumber('####') + ' ' + streetName() + out\n    case 2:\n      return replaceSymbolWithNumber('###') + ' ' + streetName() + out\n  }\n}\n\nconst secondaryAddress = (n = 1) => {\n  if (n !== 1) { return (new Array(n)).fill('').map(() => secondaryAddress()) }\n  return replaceSymbolWithNumber(randomEl(\n    [\n      'Apt. ###',\n      'Suite ###'\n    ]\n  ))\n}\n\nexport default {\n  zip,\n  geo,\n  state,\n  uk,\n  phone,\n  city,\n  streetAddress,\n  secondaryAddress,\n  streetName\n}\n","import { get, format, randomEl } from './index'\nimport getName from './name'\n\nexport const name = (frm, n = 1) => {\n  if (n !== 1) { return (new Array(n)).fill('').map(() => name(frm)) }\n  const origin = get('corporate/origins')\n  frm = frm || randomEl(['cyber', 'large', 'small'])\n  switch (frm) {\n    case 'cyber':\n      return format(\n        '{0}{1}',\n        getName({ 'last': false, 'origin': 'netrunner', 'prefix': false, suffix: false }),\n        get('corporate/cyber')\n      )\n    case 'firm':\n      // they are all from the same origin\n      return format(\n        '{0}, {1} and {2}',\n        getName({ justLast: true, origin, prefix: false, suffix: false }),\n        getName({ justLast: true, origin, prefix: false, suffix: false }),\n        getName({ justLast: true, origin, prefix: false, suffix: false })\n      )\n    case 'small':\n      return format(\n        '{0} {1}',\n        getName({ justLast: true, origin, prefix: false, suffix: false }),\n        get('corporate/small')\n      )\n    case 'large':\n      return format(\n        '{0} {1}',\n        getName({ justLast: true, origin, prefix: false, suffix: false }),\n        get('corporate/large')\n      )\n  }\n}\n\nexport const catchPhrase = (n = 1) => {\n  if (n !== 1) { return (new Array(n)).fill('').map(() => catchPhrase()) }\n  return format(\n    '{0} {1} {2}',\n    get('catchPhrase/adjective'),\n    get('catchPhrase/descriptor'),\n    get('catchPhrase/noun')\n  )\n}\n\nexport const bs = (n = 1) => {\n  if (n !== 1) { return (new Array(n)).fill('').map(() => bs()) }\n  return format(\n    '{0} {1} {2}',\n    get('bs/adjective'),\n    get('bs/buzz'),\n    get('bs/noun')\n  )\n}\n\nexport default {\n  name,\n  catchPhrase,\n  bs\n}\n","import { int, get, randomEl, format } from './index'\nimport name from './name'\n\nexport const ip = (n = 1) => {\n  if (n !== 1) return (new Array(n)).fill('').map(() => ip())\n  return (new Array(4)).fill('').map(() => (Math.random() * 254 + 1).toFixed(0)).join('.')\n}\n\nexport const username = (derived, n = 1) => {\n  if (n !== 1) return (new Array(n)).fill('').map(() => username(derived))\n  if (!derived) {\n    switch (int(4)) {\n      case 0:\n        derived = name({ 'justLast': randomEl([true, false]), 'origin': get('address/origins'), 'prefix': false, suffix: false })\n        break\n      case 1:\n        derived = name({ 'justLast': randomEl([true, false]), 'origin': 'netrunner', 'prefix': false, suffix: false })\n        break\n      case 2:\n        derived = get('bs/noun')\n        break\n      case 3:\n        derived = get('catchPhrase/noun')\n        break\n    }\n  }\n  return derived.replace(/ /g, randomEl(['.', '_'])).toLowerCase()\n}\n\nexport const domain = (derived, n = 1) => {\n  if (n !== 1) return (new Array(n)).fill('').map(() => domain(derived))\n  return format(\n    '{0}.{1}',\n    username(derived).replace('_', '-'),\n    get('domain_suffix')\n  )\n}\n\nexport const email = (derived, n = 1) => {\n  if (n !== 1) return (new Array(n)).fill('').map(() => domain(derived))\n  switch (int(2)) {\n    case 0:\n      return username(derived) + '@' + domain()\n    case 1:\n      return username() + '@' + domain(derived)\n  }\n}\n\nexport default {\n  ip,\n  username,\n  domain,\n  email\n}\n","import { randomEl, get, format } from './index'\n\nconst formats = [\n  '{3} {1}',\n  '{3} {4} {1}',\n  '{3} {0}{1}',\n  '{0}{4} {2}',\n  '{3} {0}{1} {2}',\n  '{3} {4} {1} {0}{2}',\n  '{3} {4} {1} {2}',\n  '{3} {0}{4} {1} {2}'\n]\n\nconst invention = (n = 1) => {\n  if (n !== 1) return (new Array(n)).fill('').map(() => invention())\n  return format(randomEl(formats),\n    get('invention/prefix'),\n    get('invention/function1'),\n    get('invention/function2'),\n    get('invention/catalyst1'),\n    get('invention/catalyst2')\n  )\n}\n\nexport default invention\n","import { get, format, randomEl } from './index'\n\nconst formats = {\n  star1: 'Is {0} {1} {2}?',\n  star2: 'Is {0} {1} {2} {3}?',\n  star3: '{0} {1} {2}, you won\\'t guess what happened next!',\n  star4: '{0} {1} {2} and you won\\'t believe what happened next!'\n}\n\nexport const headline = (star, mode, withInfo, n) => {\n  star = star || get('clickbait/star')\n  mode = mode || randomEl(Object.keys(formats))\n\n  const noun = get('clickbait/noun')\n  const verb = get('clickbait/verb')\n  const modifier = get('clickbait/modifier')\n\n  const out = format(\n    formats[mode],\n    star,\n    verb,\n    noun,\n    modifier\n  )\n\n  return withInfo ? { headline: out, star: star, verb: verb, noun: noun, modifier: modifier } : out\n}\n\nexport const star = (n = 1) => (n === 1) ? get('jobs') : (new Array(n)).fill('').map(() => get('jobs'))\n\nexport default {\n  headline,\n  star\n}\n"],"sourceRoot":""}